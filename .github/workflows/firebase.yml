# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Firebase CI

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ master ]

jobs:

  prettier:
    name: Prettier
    # needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          # Make sure the value of GITHUB_TOKEN will not be persisted in repo's config
          persist-credentials: false

      - name: Prettify code
        uses: creyD/prettier_action@v4.3
        with:
          prettier_options: --write **/*.{js,md}
          only_changed: True
          # Set your custom token test
          github_token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

  build:
    name: Build
    needs: prettier
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install -g yarn
    - name: yarn install, build and test
      run: |
        yarn install
        yarn build
    - name: Archive Build
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: build

  deploy-test:
    name: Deploy test
    if: github.ref == 'refs/heads/dev'
    # run: firebase deploy --only hosting:dev --non-interactive --token ${{secrets.FIREBASE_TOKEN}} -m "RunID ${{ github.run_id }} Commit SHA ${{ github.sha }}"

    # needs: prettier
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download Build
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      - name: Depoy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting:dev
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  
  deploy-prod:
    name: Provision Prod
    if: github.ref == 'refs/heads/master'
    needs: deploy-test
    # needs: functionalTestsStaging
    runs-on: ubuntu-latest
    environment:
      name: gh-actions-react-firebase-example.prod
    steps:
      - uses: actions/checkout@v2
      - name: Download Build
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      - name: Depoy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting:prod
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

